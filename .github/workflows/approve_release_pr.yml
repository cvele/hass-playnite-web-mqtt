name: Auto Approve and Merge Release PRs

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened

jobs:
  auto_merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if PR is from a release/v*.*.* branch
        id: check_branch
        run: |
          PR_BRANCH=$(echo "${{ github.event.pull_request.head.ref }}")
          if [[ "$PR_BRANCH" =~ ^release/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "PR is from a release branch."
              echo "is_release_branch=true" >> $GITHUB_ENV
          else
              echo "PR is NOT from a release branch, skipping merge."
              echo "is_release_branch=false" >> $GITHUB_ENV
              exit 0
          fi

      - name: Wait for checks to pass
        id: wait_for_checks
        uses: actions/github-script@v6
        with:
          script: |
            const pr = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
            });

            const requiredChecks = pr.data.mergeable_state === "clean";
            return requiredChecks;

      - name: Check if PR can be merged
        if: steps.wait_for_checks.outputs.result == 'true'
        run: echo "All checks have passed, PR is mergeable."

      - name: Approve the PR
        if: steps.wait_for_checks.outputs.result == 'true'
        run: |
          gh pr review ${{ github.event.pull_request.number }} --approve
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge the PR
        if: steps.wait_for_checks.outputs.result == 'true'
        run: |
          gh pr merge ${{ github.event.pull_request.number }} --squash --delete-branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
